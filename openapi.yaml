openapi: 3.0.0
security:
  - BearerAuth: [candidate]
info:
  title: GigAndJob API
  description: HTTP API Server written in nest for the GigAndJob project
  version: 0.1.0
paths:
  /CV:
    post:
      summary: Registers a new CV of a candidate
      description: Creates a new cv that can be approved
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CVSubmitForm"
      responses:
        '201':
          description: 'A success message'
          content:
            application/json:
              schema: 
                type: string
  /auth/login:
    post:
      summary: Logs in a Candidate given an email and password
      description: Logs in via HTTP Basic a given user using the email and password provided
      security:
        - BasicAuth: [candidate]
      responses:
        '200':
          description: Authenticated user data
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    description: Id of the user
                  email:
                    type: string
                    format: email
                    description: Email of the user
                  jwt:
                    type: string
                    format: jwt
  /auth/logout:
    post:
      summary: Logs out a Candidate given a JWT
      description: Log out a Candidate given it's JWT
      responses:
        '200':
          description: A succesfull message
          content:
            application/json:
              schema:
                type: string
  /Candidate:
    post:
      summary: Registers a new candidate
      description: Creates a new candidate that can apply to job offers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CandidateRegistrationForm"
      responses:
        '201':
          description: 'A success message'
          content:
            application/json:
              schema: 
                type: string
  /Candidate/profile:
    get:
      summary: Gets the data of the current logged in Candidate
      description: Gets the data of the current logged in Candidate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CandidateRegistrationForm"
      responses:
        '200':
          description: 'A success message'
          content:
            application/json:
              schema: 
                type: string
  /Candidate/{id}/suspend:
    post:
      summary: Suspends a candidate or deletes if treshold is surpased
      description: Suspends a candidate and the candidate is no longer to apply to a offer
      parameters:
        - in: path
          name: id
          required: true
          description: The id of the candidate to suspend
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CandidateSuspensionForm"
      responses:
        '200':
          description: 'A success message'
          content:
            application/json:
              schema: 
                type: string
  /Candidate/{id}/reactivate:
    post:
      summary: Reactivates a candidate or deletes if treshold is surpased
      description: Reactivates a candidate and the candidate is able to apply to a offer
      parameters:
        - in: path
          name: id
          required: true
          description: The id of the candidate to reactivate
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: 'A success message'
          content:
            application/json:
              schema: 
                type: string
  /Candidate/{id}:
    delete:
      summary: Deletes a candidate
      description: Deletes a candidate and it's related records
      parameters:
        - in: path
          name: id
          required: true
          description: The id of the candidate to delete
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: 'A success message'
          content:
            application/json:
              schema: 
                type: string
  /employers:
    post:
      summary: Registers a new employer
      description: Creates a new employer that will hire candidates for a job.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmployerRegistrationForm"
      responses:
        '201':
          description: 'A success message'
          content:
            application/json:
              schema: 
                type: string
  /employers/Reactivated:
    put:
      summary: Reactiva un Empleador
      description: Esta accion cambio el estado de suspendido a reactivado/activo de un Empleador
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmployerStateChangeInformation"
      responses:
        '201':
          description: 'A success message'
          content:
            application/json:
              schema: 
                type: string
  /employers/:id:
    delete:
      summary: Deletes an Employer
      description: This action changes the state of the employer to deleted
      parameters:
        - in: path
          name: id
          required: true
          description: The id of the employer to delete
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmployerStateChangeInformation"
      responses:
        '201':
          description: 'A success message'
          content:
            application/json:
              schema: 
                type: string
  /meeting/accept:
    put:
      summary: Accept a meeting
      description: Candidate accepts going to a meeting with the employer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MeetingAcceptanceForm"
      responses:
        '200':
          description: 'A success message'
          content:
            application/json:
              schema:
                type: string
  /meeting/reject:
    put:
      summary: Reject a meeting
      description: Candidate rejects going to a meeting with the employer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MeetingAcceptanceForm"
      responses:
        '200':
          description: 'A success message'
          content:
            application/json:
              schema:
                type: string
  /meeting/{id}/getall:
    get:
      summary: Gets all meetings of a Candidate
      description: Gets all meeting booked with a given Candidate
      parameters:
        - in: path
          name: id
          required: true
          description: The id of the candidate with which the meetings are booked
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MeetingAcceptanceForm"
      responses:
        '200':
          description: 'A success message'
          content:
            application/json:
              schema:
                type: string
  /meeting:
    post:
      summary: Creates a meeting
      description: Creates a meeting with a given employer ID and candidate ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MeetingCreationForm"
      responses:
        '200':
          description: 'A success message'
          content:
            application/json:
              schema:
                type: string
  /offer:
    post:
      summary: Creates a new offer
      description: Creates a new offer with the fields of direction, sector, budget and description
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OfferRegistrationForm"
      responses:
        '201':
          description: 'A success message'
          content:
            application/json:
              schema:
                type: string
  /offer/Reactived:
    put:
      summary: Reactivates an offer
      description: Reactivates a previously suspended offer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OfferIdForm"
      responses:
        '200':
          description: 'A success message'
          content:
            application/json:
              schema:
                type: string
  /offer/Eliminited:
    put:
      summary: Eliminates an offer
      description: Eliminates an offer and it's related entities
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OfferIdForm"
      responses:
        '200':
          description: 'A success message'
          content:
            application/json:
              schema:
                type: string
  /offer/{id}/report:
    post:
      summary: Reports an offer
      description: Reports an offer given it's id, a reporter Id and a reason
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the offer to be reported
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OfferReportInformation"
      responses:
        '200':
          description: 'A success message'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OfferReportInformation"
  /offer/applyToOffer:
    put:
      summary: Applies to an offer
      description: Applies a candidate to an offer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OfferApplicationInformation"
      responses:
        '200':
          description: 'A success message'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OfferReportInformation"
  /offer/likeOffer:
    put:
      summary: Likes an offer
      description: Candidate gives like to an offer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OfferLikeInformation"
      responses:
        '200':
          description: 'A success message'
          content:
            application/json:
              schema:
                type: string
  /offer/getall:
    get:
      summary: Gets all registered offers
      description: Returns all registered offers in the system
      responses:
        '200':
          description: 'A success message'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OfferModel"
  /offer/{id}/getone:
    get:
      summary: Gets a existing offer
      description: Returns an offer given it's id
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the offer to be returned
          schema:
            type: string
      responses:
        '200':
          description: 'A success message'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OfferModel"
  /dashboard:
    get:
      summary: Read-Side for dashboard
      description: Queries the info to build the web dashboard screen 
      content:
        application/json: 
          schema:
            $ref: '#/components/schemas/DashboardQueryDate'
      responses: 
        '200':
          description: 'A dashboard DTO JSON'
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardDTO'
components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    BearerAuth:
      type: http
      scheme: bearer
      in: cookie
  schemas:
    CandidateSuspensionForm:
      description: Form data needed to suspend a candidate
      type: object
      required: 
        - until
      properties:
        until:
          type: string
          format: date
          description: Date until the candidate remains suspended
          example: "January 28 2022 18:00:00 GMT+04:00"
    CandidateRegistrationForm:
      description: Form data needed to register a candidate
      type: object
      required: 
        - name
        - lastname
        - phoneCode
        - email
        - birthdate
        - latitude
        - longitude
      properties:
        name:
          type: string
          description: First name of the candidate
        lastname:
          type: string
          description: Last name of the candidate
        phoneCode:
          type: string
          description: Area code of the phone number of the candidate
        email:
          format: email
          type: string
          description: Email of the candidate
        birthdate:
          format: date
          type: string
          description: Birth date of the candidate
        latitude:
          type: double
          description: Latitude coordinate of the candidate location 
        longitude:
          type: double
          description: Longitude coordinate of the candidate location 
    EmployerRegistrationForm:
      description: Form data needed to register an employer
      type: object
      required: 
        - name
        - description
        - location
        - state
        - rif
        - phone
        - mail
        - comDesignation
      properties:
        name:
          type: string
          description: Employer's full name
        description:
          type: string
          description: Description of the employer
        location:
          type: string
          description: Address of the employer
        state:
          type: string
          description: Current state of the employer
          enum: [Active, Eliminated, Suspended]
        rif:
          description: Rif of the employer
          type: string
        phone:
          description: Phone of the employer
          type: string
        mail:
          description: Email of the employer
          type: string
          format: email
        comDesignation:
          description: Common designation of the employer
          type: string
    MeetingAcceptanceForm:
      description: Form data needed to accept a meeting
      type: object
      required: 
        - candidateId
        - meetingId
      properties:
        candidateId:
          description: Id of the candidate that's accepting the meeting
          type: string
          format: uuid
        meetingId:
          description: Id of the meeting that's being accepted
          type: string
    OfferRegistrationForm:
      description: Form data needed to register an offer
      type: object
      required: 
        - direction
        - sector
        - budget
        - description
      properties:
        direction:
          description: Address of the workplace of the offer
          type: string
        sector:
          description: Sector in which the offer is based
          type: string
          enum: [Laws, Technology]
        budget:
          description: Budget of the offer
          type: number
        description:
          description: Description of the offer
          type: string
    OfferIdForm:
      description: Form data that indicates an offer Id
      type: object
      required:
        - idOffer
      properties:
        idOffer:
          description: Id of the offer which's state will change
          type: string
          format: uuid
    OfferReportInformation:
      description: Information related to an offer report
      type: object
      required: 
        - reason
        - reporterId
      properties:
        reason:
          description: Reason why the offer is being reported
          type: string
        reporterId:
          description: Id of the candidate that's being reported
          type: string
          format: uuid
    EmployerStateChangeInformation:
      description: Informacion relacionada al cambio de estado de un empleador
      type: object
      required: 
        - id
      properties:
        id:
          description: Id del empleador a cambiar de estado
          type: string
          format: uuid
    OfferApplicationInformation:
      description: Information needed to apply a candidate to an offer
      type: object
      required:
        - idOffer
        - idCandidate
        - idEmployer
        - state
        - budget
        - description
        - duration_days
      properties:
        idOffer:
          type: string
          format: uuid
          description: Id of the offer to apply to
        idCandidate:
          type: string
          format: uuid
          description: Id of the candidate who's applying to the offer
        idEmployer:
          type: string
          format: uuid
          description: Id of the employer who issued the offer
        state:
          type: string
          description: State of the application
          enum: [Active, Inactive, Canceled, Eliminated]
        budget:
          type: number
          description: Budget of the application
        description:
          type: string
          description: Description of the application
        duration_days:
          type: number
          description: Days of duration of the application
    OfferModel:
      description: Offer information
      type: object
      required: 
        - OfferId
        - State
        - PublicationDate
        - Rating
        - Direction
        - Sector
        - Budget
        - Description
        - reports
        - applications
      properties:
        OfferId:
          description: Id of the offer
          type: string
          format: uuid
        State:
          description: State of the offer
          type: string
          enum: [Active, Suspended, Closed, Eliminated]
        PublicationDate:
          description: Date of publication of the offer
          type: date
        Rating:
          description: Rating of the offer
          type: number
        Direction:
          description: Latitude and longitude of the location of the offer
          type: object
          required:
            - latitude
            - longitude
          properties:
            latitude:
              type: number
              description: Latitude of the location
            longitude:
              type: number
              description: Longitude of the location
        Sector:
          type: string
          description: Sector in which the offer will be developed
          enum: [Technology, Laws]
        Budget:
          type: number
          description: Budget of the offer
        Description:
          type: string
          description: Description of the offer
        reports:
          type: array
          description: Reports (if any) issued to the offer
          items:
            type: object
            required:
              - reporterId
              - reason
            properties:
              reporterId:
                type: string
                format: uuid
                description: Id of the candidate that issued the report
              reason:
                type: string
                description: Reason of the report
        applications:
          type: array
          description: Applications (if any) of the offer
          items:
            type: object
            required:
              - applicationId
              - state
              - candidateId
              - previous_state
              - budget
              - description
              - duration_days
            properties:
              applicationId:
                type: string
                format: uuid
                description: Id of the application
              state:
                type: string
                enum: [Active, Inactive, Canceled, Eliminated]
                description: State of the application
              candidateId:
                type: string
                description: Id of the Candidate that issued this application
                format: uuid
              previous_state:
                type: string
                enum: [Active, Inactive, Canceled, Eliminated]
                description: Previous state of the application
              budget:
                type: number
                description: Budget of the application
              description:
                type: string
                description: Description of the application
              duration_days:
                type: number
                description: Days of duration of the application
          
    DashboardQueryDate:
      description: Date that is used for query the dashboard data
      type: Date
    DashboardDTO:
      description: A DTO with the dashboard info
      required: 
        - meetings
        - employers
        - users
      properties:
        meetings: 
          description: number that represents today's meetings
          type: number
        employers: 
          description: number of employers registered
          type: number
        users: 
          description: number of users registered
          type: number
          
    CVSubmitForm:
      description: Form data needed to submit a cv
      type: object
      required: 
        - cvID
        - candidateID
        - description
        - workExperiences
        - studies 
        - photo
        - candidatebirthdate
      properties:
        cvID:
          type: string
          format: uuid
          description: Id of the CV being submitted
        candidateID:
          type: string
          format: uuid
          description: Id of the candidate who's submit his CV
        description:
          type: string
          description: Description of the candidate inside the CV
        photo:
          type: string
          format: byte
        candidatebirthdate:
          type: string
          format: date
          description: Birth date of the candidate 
        workExperiences:
          type: array
          items:
            type: object
            properties:
              description:
                type: string
              startDate:
                type: string
              finishDate:
                type: string
              job:
                type: string
          description: Work Experiences of the candidate
        studies:
          type: array
          items:
            type: object
            properties:
              description:
                type: string
              startDate:
                type: string
              finishDate:
                type: string
              institution:
                type: string
              degree:
                type: string
